// Generated by view binder compiler. Do not edit!
package com.example.top.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.LinearLayout;
import android.widget.ListView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.top.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ButtonedUketoriLayoutBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button UketoriA1Tab;

  @NonNull
  public final Button UketoriA2Tab;

  @NonNull
  public final Button UketoriA3Tab;

  @NonNull
  public final Button UketoriA4Tab;

  @NonNull
  public final Button UketoriB12Tab;

  @NonNull
  public final ListView UketoriRyouseiListShow;

  @NonNull
  public final LinearLayout linearLayout2;

  @NonNull
  public final Button uketoriGoBackButton;

  @NonNull
  public final TextView uketoriJimutouNameShow;

  private ButtonedUketoriLayoutBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button UketoriA1Tab, @NonNull Button UketoriA2Tab, @NonNull Button UketoriA3Tab,
      @NonNull Button UketoriA4Tab, @NonNull Button UketoriB12Tab,
      @NonNull ListView UketoriRyouseiListShow, @NonNull LinearLayout linearLayout2,
      @NonNull Button uketoriGoBackButton, @NonNull TextView uketoriJimutouNameShow) {
    this.rootView = rootView;
    this.UketoriA1Tab = UketoriA1Tab;
    this.UketoriA2Tab = UketoriA2Tab;
    this.UketoriA3Tab = UketoriA3Tab;
    this.UketoriA4Tab = UketoriA4Tab;
    this.UketoriB12Tab = UketoriB12Tab;
    this.UketoriRyouseiListShow = UketoriRyouseiListShow;
    this.linearLayout2 = linearLayout2;
    this.uketoriGoBackButton = uketoriGoBackButton;
    this.uketoriJimutouNameShow = uketoriJimutouNameShow;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ButtonedUketoriLayoutBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ButtonedUketoriLayoutBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.buttoned_uketori_layout, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ButtonedUketoriLayoutBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Uketori_a1_tab;
      Button UketoriA1Tab = ViewBindings.findChildViewById(rootView, id);
      if (UketoriA1Tab == null) {
        break missingId;
      }

      id = R.id.Uketori_a2_tab;
      Button UketoriA2Tab = ViewBindings.findChildViewById(rootView, id);
      if (UketoriA2Tab == null) {
        break missingId;
      }

      id = R.id.Uketori_a3_tab;
      Button UketoriA3Tab = ViewBindings.findChildViewById(rootView, id);
      if (UketoriA3Tab == null) {
        break missingId;
      }

      id = R.id.Uketori_a4_tab;
      Button UketoriA4Tab = ViewBindings.findChildViewById(rootView, id);
      if (UketoriA4Tab == null) {
        break missingId;
      }

      id = R.id.Uketori_b12_tab;
      Button UketoriB12Tab = ViewBindings.findChildViewById(rootView, id);
      if (UketoriB12Tab == null) {
        break missingId;
      }

      id = R.id.Uketori_ryousei_list_show;
      ListView UketoriRyouseiListShow = ViewBindings.findChildViewById(rootView, id);
      if (UketoriRyouseiListShow == null) {
        break missingId;
      }

      id = R.id.linearLayout2;
      LinearLayout linearLayout2 = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout2 == null) {
        break missingId;
      }

      id = R.id.uketori_go_back_button;
      Button uketoriGoBackButton = ViewBindings.findChildViewById(rootView, id);
      if (uketoriGoBackButton == null) {
        break missingId;
      }

      id = R.id.uketori_jimutou_name_show;
      TextView uketoriJimutouNameShow = ViewBindings.findChildViewById(rootView, id);
      if (uketoriJimutouNameShow == null) {
        break missingId;
      }

      return new ButtonedUketoriLayoutBinding((ConstraintLayout) rootView, UketoriA1Tab,
          UketoriA2Tab, UketoriA3Tab, UketoriA4Tab, UketoriB12Tab, UketoriRyouseiListShow,
          linearLayout2, uketoriGoBackButton, uketoriJimutouNameShow);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
